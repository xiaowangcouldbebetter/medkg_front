{"version":3,"file":"js/921.7c55f272.js","mappings":"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","sources":["webpack://hisclient/./src/views/chat/chat.vue","webpack://hisclient/./src/views/chat/chat.vue?30df"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\" :class=\"{ 'dark-mode': darkMode }\">\r\n    <!-- 标题栏 -->\r\n    <div class=\"chat-header\">\r\n      <div class=\"header-left\">\r\n        <div class=\"logo\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div class=\"header-center\">\r\n        <h1>智能医疗问答系统</h1>\r\n        <div class=\"header-subtitle\">基于医疗知识图谱的智能诊疗助手</div>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <button class=\"icon-button\" @click=\"toggleDarkMode\" :title=\"darkMode ? '切换到亮色模式' : '切换到暗色模式'\">\r\n          <svg v-if=\"darkMode\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\r\n            <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\r\n            <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\r\n            <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\r\n            <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\r\n            <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\r\n            <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\r\n            <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\r\n            <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\r\n          </svg>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 消息列表区域 -->\r\n    <div class=\"message-list\" ref=\"messageList\">\r\n      <div class=\"welcome-message\" v-if=\"messages.length === 0\">\r\n        <div class=\"welcome-icon\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\r\n            <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\r\n          </svg>\r\n        </div>\r\n        <h2>欢迎使用医疗问答系统</h2>\r\n        <p>您可以询问任何医疗相关问题，例如：</p>\r\n        <div class=\"suggestion-chips\">\r\n          <div class=\"chip\" v-for=\"(suggestion, index) in suggestions\" :key=\"index\" @click=\"useExample(suggestion)\">\r\n            {{ suggestion }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <transition-group name=\"message-fade\">\r\n        <div \r\n          v-for=\"message in messages\" \r\n          :key=\"message.id\" \r\n          :class=\"['message-bubble', message.isUser ? 'user' : 'system']\"\r\n        >\r\n          <div class=\"message-avatar\">\r\n            <div class=\"avatar-icon\">\r\n              <span v-if=\"message.isUser\">您</span>\r\n              <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path>\r\n                <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div class=\"message-wrapper\">\r\n            <div class=\"message-header\">\r\n              <span>{{ message.isUser ? '您的问题' : '系统回复' }}</span>\r\n              <span class=\"message-time\">{{ formatTime(message.timestamp) }}</span>\r\n            </div>\r\n            <div class=\"message-content\" v-html=\"formatMessage(message.text)\"></div>\r\n            <div class=\"message-actions\" v-if=\"!message.isUser\">\r\n              <button class=\"action-btn\" @click=\"copyToClipboard(message.text)\" title=\"复制回答\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\r\n                  <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition-group>\r\n      \r\n      <div class=\"typing-indicator\" v-if=\"isLoading\">\r\n        <div class=\"dot\"></div>\r\n        <div class=\"dot\"></div>\r\n        <div class=\"dot\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 输入区域 -->\r\n    <div class=\"input-area\">\r\n      <div class=\"input-wrapper\">\r\n        <input\r\n          v-model.trim=\"inputText\"\r\n          placeholder=\"请输入您的医疗问题...\"\r\n          @keyup.enter=\"sendMessage\"\r\n          :disabled=\"isLoading\"\r\n          ref=\"inputField\"\r\n        />\r\n        <button \r\n          :disabled=\"!inputText || isLoading\"\r\n          @click=\"sendMessage\"\r\n          class=\"send-button\"\r\n        >\r\n          <span v-if=\"isLoading\" class=\"loading-spinner\"></span>\r\n          <svg v-else xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n            <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div class=\"input-footer\">\r\n        <span>按 Enter 发送 | <kbd>Esc</kbd> 清空输入框 | <kbd>/</kbd> 查看示例</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 消息通知 -->\r\n    <div class=\"toast\" v-if=\"toast.show\" :class=\"toast.type\">\r\n      {{ toast.message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      inputText: '',\r\n      messages: [],\r\n      messageId: 0,\r\n      isLoading: false,\r\n      darkMode: false,\r\n      suggestions: [\r\n        '糖尿病的症状有哪些？',\r\n        '高血压如何预防？',\r\n        '头痛可能是什么原因？',\r\n        '感冒药和发烧药有什么区别？',\r\n        '如何正确使用抗生素？'\r\n      ],\r\n      toast: {\r\n        show: false,\r\n        message: '',\r\n        type: 'info',\r\n        timeout: null\r\n      }\r\n    };\r\n  },\r\n  \r\n  mounted() {\r\n    // 检查本地存储的暗黑模式设置\r\n    const savedDarkMode = localStorage.getItem('darkMode') === 'true';\r\n    this.darkMode = savedDarkMode;\r\n    \r\n    // 键盘快捷键监听\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n    \r\n    // 自动聚焦输入框\r\n    this.$nextTick(() => {\r\n      this.$refs.inputField.focus();\r\n    });\r\n  },\r\n  \r\n  beforeDestroy() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  },\r\n  \r\n  methods: {\r\n    // 处理键盘快捷键\r\n    handleKeyDown(e) {\r\n      // ESC 清空输入\r\n      if (e.key === 'Escape') {\r\n        this.inputText = '';\r\n        this.$refs.inputField.focus();\r\n      }\r\n      \r\n      // 斜杠显示帮助\r\n      if (e.key === '/' && this.inputText === '') {\r\n        e.preventDefault();\r\n        this.showToast('请选择下方的示例问题', 'info');\r\n      }\r\n    },\r\n    \r\n    // 使用示例问题\r\n    useExample(text) {\r\n      this.inputText = text;\r\n      this.sendMessage();\r\n    },\r\n    \r\n    // 显示通知消息\r\n    showToast(message, type = 'info') {\r\n      if (this.toast.timeout) {\r\n        clearTimeout(this.toast.timeout);\r\n      }\r\n      \r\n      this.toast.show = true;\r\n      this.toast.message = message;\r\n      this.toast.type = type;\r\n      \r\n      this.toast.timeout = setTimeout(() => {\r\n        this.toast.show = false;\r\n      }, 3000);\r\n    },\r\n    \r\n    // 复制文本到剪贴板\r\n    copyToClipboard(text) {\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        this.showToast('已复制到剪贴板', 'success');\r\n      }).catch(err => {\r\n        this.showToast('复制失败', 'error');\r\n        console.error('无法复制: ', err);\r\n      });\r\n    },\r\n    \r\n    // 切换暗黑模式\r\n    toggleDarkMode() {\r\n      this.darkMode = !this.darkMode;\r\n      localStorage.setItem('darkMode', this.darkMode);\r\n    },\r\n    \r\n    // 格式化消息内容，处理换行和特殊标记\r\n    formatMessage(text) {\r\n      if (!text) return '';\r\n      \r\n      // 处理换行\r\n      let formatted = text.replace(/\\n/g, '<br>');\r\n      \r\n      // 处理【】中的内容为高亮\r\n      formatted = formatted.replace(/【(.+?)】/g, '<span class=\"highlight\">$1</span>');\r\n      \r\n      // 处理属性信息和关系信息的标题\r\n      formatted = formatted.replace(/属性信息：/g, '<strong class=\"info-title\">属性信息：</strong>');\r\n      formatted = formatted.replace(/相关信息：/g, '<strong class=\"info-title\">相关信息：</strong>');\r\n      \r\n      // 处理列表项\r\n      formatted = formatted.replace(/- (.+)/g, '<div class=\"list-item\">• $1</div>');\r\n      \r\n      return formatted;\r\n    },\r\n    \r\n    // 格式化时间\r\n    formatTime(timestamp) {\r\n      if (!timestamp) return '';\r\n      const date = new Date(timestamp);\r\n      return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n    },\r\n    \r\n    // 优化后的数据提取方法\r\n    findAnswerInData(data) {\r\n      if (!data?.data?.results || data.data.results.length === 0) {\r\n        return '很抱歉，暂时没有找到相关信息。请尝试换一种方式提问，或者咨询其他医疗问题。';\r\n      }\r\n\r\n      const results = data.data.results;\r\n      \r\n      // 检测问题类型\r\n      const questionType = this.detectQuestionType(results);\r\n      \r\n      // 根据不同问题类型格式化答案\r\n      switch(questionType) {\r\n        case 'disease_desc':\r\n          return this.formatDiseaseDescription(results);\r\n        case 'disease_acompany':\r\n          return this.formatDiseaseComplication(results);\r\n        case 'disease_do_food':\r\n          return this.formatDiseaseFood(results);\r\n        case 'disease_symptom':\r\n          return this.formatDiseaseSymptom(results);\r\n        case 'disease_prevent':\r\n          return this.formatDiseasePrevent(results);\r\n        default:\r\n          return this.formatGeneralResults(results);\r\n      }\r\n    },\r\n    \r\n    // 检测问题类型\r\n    detectQuestionType(results) {\r\n      // 检查第一个结果是否有实体和属性\r\n      const firstResult = results[0];\r\n      \r\n      // 检查是否是疾病描述\r\n      if (firstResult.properties && \r\n          firstResult.properties.desc && \r\n          firstResult.properties.desc.length > 50) {\r\n        return 'disease_desc';\r\n      }\r\n      \r\n      // 检查是否是并发症\r\n      if (results.length > 3 && \r\n          results.every(r => r.relations && \r\n                            r.relations.some(rel => \r\n                              rel.relation && \r\n                              rel.relation.includes('并发症')))) {\r\n        return 'disease_acompany';\r\n      }\r\n      \r\n      // 检查是否是食物相关\r\n      if (results.some(r => r.relations && \r\n                          r.relations.some(rel => \r\n                            rel.relation && \r\n                            (rel.relation.includes('宜吃') || \r\n                             rel.relation.includes('推荐食谱'))))) {\r\n        return 'disease_do_food';\r\n      }\r\n      \r\n      // 检查是否是症状相关\r\n      if (results.some(r => r.relations && \r\n                          r.relations.some(rel => \r\n                            rel.relation && \r\n                            rel.relation.includes('症状')))) {\r\n        return 'disease_symptom';\r\n      }\r\n      \r\n      // 检查是否是预防相关\r\n      if (results.some(r => r.relations && \r\n                          r.relations.some(rel => \r\n                            rel.relation && \r\n                            rel.relation.includes('预防')))) {\r\n        return 'disease_prevent';\r\n      }\r\n      \r\n      return 'general';\r\n    },\r\n    \r\n    // 格式化疾病描述\r\n    formatDiseaseDescription(results) {\r\n      let answer = '';\r\n      const result = results[0];\r\n      \r\n      if (result.entity) {\r\n        answer += `<div class=\"entity-title\">【${result.entity}】</div>`;\r\n      }\r\n      \r\n      if (result.properties && result.properties.desc) {\r\n        // 清理描述中的特殊字符\r\n        let desc = result.properties.desc.replace(/\\\\xa0/g, ' ').trim();\r\n        \r\n        // 分段落显示\r\n        const paragraphs = desc.split('\\n').filter(p => p.trim());\r\n        \r\n        paragraphs.forEach(para => {\r\n          answer += `<p class=\"desc-paragraph\">${para}</p>`;\r\n        });\r\n      }\r\n      \r\n      return answer || '很抱歉，暂时没有找到相关疾病的描述信息。';\r\n    },\r\n    \r\n    // 格式化并发症信息\r\n    formatDiseaseComplication(results) {\r\n      if (!results || results.length === 0) return '未找到相关并发症信息';\r\n      \r\n      const mainEntity = results[0].entity;\r\n      let answer = `<div class=\"entity-title\">【${mainEntity}】的并发症</div>`;\r\n      \r\n      // 创建并发症分类\r\n      const complications = {\r\n        from: [], // 主疾病引起的并发症\r\n        to: []    // 可能导致主疾病的其他疾病\r\n      };\r\n      \r\n      // 分类处理\r\n      results.forEach(result => {\r\n        if (result.relations && result.relations.length > 0) {\r\n          result.relations.forEach(relation => {\r\n            if (relation.source === mainEntity) {\r\n              // 主疾病引起的并发症\r\n              complications.from.push(relation.target);\r\n            } else if (relation.target === mainEntity) {\r\n              // 可能导致主疾病的其他疾病\r\n              complications.to.push(relation.source);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // 格式化主疾病引起的并发症\r\n      if (complications.from.length > 0) {\r\n        answer += `<div class=\"complication-section\">\r\n          <div class=\"section-title\">${mainEntity}可能引起的并发症：</div>\r\n          <div class=\"complication-list\">`;\r\n        \r\n        complications.from.slice(0, 10).forEach(comp => {\r\n          answer += `<div class=\"complication-item\">• ${comp}</div>`;\r\n        });\r\n        \r\n        if (complications.from.length > 10) {\r\n          answer += `<div class=\"complication-more\">等${complications.from.length}种并发症</div>`;\r\n        }\r\n        \r\n        answer += `</div></div>`;\r\n      }\r\n      \r\n      // 格式化可能导致主疾病的其他疾病\r\n      if (complications.to.length > 0) {\r\n        answer += `<div class=\"complication-section\">\r\n          <div class=\"section-title\">可能导致${mainEntity}的其他疾病：</div>\r\n          <div class=\"complication-list\">`;\r\n        \r\n        complications.to.slice(0, 10).forEach(comp => {\r\n          answer += `<div class=\"complication-item\">• ${comp}</div>`;\r\n        });\r\n        \r\n        if (complications.to.length > 10) {\r\n          answer += `<div class=\"complication-more\">等${complications.to.length}种疾病</div>`;\r\n        }\r\n        \r\n        answer += `</div></div>`;\r\n      }\r\n      \r\n      // 添加注意事项\r\n      answer += `<div class=\"notice-section\">\r\n        <div class=\"notice-title\">温馨提示：</div>\r\n        <div class=\"notice-content\">并发症信息仅供参考，具体诊断和治疗请咨询专业医生。</div>\r\n      </div>`;\r\n      \r\n      return answer;\r\n    },\r\n    \r\n    // 格式化食物信息\r\n    formatDiseaseFood(results) {\r\n      if (!results || results.length === 0) return '未找到相关饮食信息';\r\n      \r\n      const mainEntity = results[0].entity;\r\n      let answer = `<div class=\"entity-title\">【${mainEntity}】的饮食建议</div>`;\r\n      \r\n      // 分类食物\r\n      const foods = {\r\n        recommended: [], // 宜吃食物\r\n        recipes: []      // 推荐食谱\r\n      };\r\n      \r\n      // 分类处理\r\n      results.forEach(result => {\r\n        if (result.relations && result.relations.length > 0) {\r\n          result.relations.forEach(relation => {\r\n            if (relation.relation && relation.relation.includes('宜吃')) {\r\n              foods.recommended.push(relation.target);\r\n            } else if (relation.relation && relation.relation.includes('推荐食谱')) {\r\n              foods.recipes.push(relation.target);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // 格式化宜吃食物\r\n      if (foods.recommended.length > 0) {\r\n        answer += `<div class=\"food-section\">\r\n          <div class=\"section-title\">宜吃食物：</div>\r\n          <div class=\"food-grid\">`;\r\n        \r\n        foods.recommended.forEach(food => {\r\n          answer += `<div class=\"food-item\">\r\n            <span class=\"food-icon\">🍽️</span>\r\n            <span class=\"food-name\">${food}</span>\r\n          </div>`;\r\n        });\r\n        \r\n        answer += `</div></div>`;\r\n      }\r\n      \r\n      // 格式化推荐食谱\r\n      if (foods.recipes.length > 0) {\r\n        answer += `<div class=\"food-section\">\r\n          <div class=\"section-title\">推荐食谱：</div>\r\n          <div class=\"recipe-list\">`;\r\n        \r\n        foods.recipes.forEach(recipe => {\r\n          answer += `<div class=\"recipe-item\">\r\n            <span class=\"recipe-icon\">🍲</span>\r\n            <span class=\"recipe-name\">${recipe}</span>\r\n          </div>`;\r\n        });\r\n        \r\n        answer += `</div></div>`;\r\n      }\r\n      \r\n      // 添加饮食建议\r\n      answer += `<div class=\"notice-section\">\r\n        <div class=\"notice-title\">饮食注意事项：</div>\r\n        <div class=\"notice-content\">合理饮食是控制疾病的重要手段，建议配合医生指导制定个性化饮食方案。</div>\r\n      </div>`;\r\n      \r\n      return answer;\r\n    },\r\n    \r\n    // 格式化症状信息\r\n    formatDiseaseSymptom(results) {\r\n      if (!results || results.length === 0) return '未找到相关症状信息';\r\n      \r\n      const mainEntity = results[0].entity;\r\n      let answer = `<div class=\"entity-title\">【${mainEntity}】的症状</div>`;\r\n      \r\n      // 收集症状\r\n      const symptoms = [];\r\n      \r\n      results.forEach(result => {\r\n        if (result.relations && result.relations.length > 0) {\r\n          result.relations.forEach(relation => {\r\n            if (relation.relation && relation.relation.includes('症状')) {\r\n              symptoms.push(relation.target);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // 格式化症状列表\r\n      if (symptoms.length > 0) {\r\n        answer += `<div class=\"symptom-section\">\r\n          <div class=\"symptom-list\">`;\r\n        \r\n        symptoms.forEach(symptom => {\r\n          answer += `<div class=\"symptom-item\">• ${symptom}</div>`;\r\n        });\r\n        \r\n        answer += `</div></div>`;\r\n      } else {\r\n        answer += '<p>未找到相关症状信息</p>';\r\n      }\r\n      \r\n      return answer;\r\n    },\r\n    \r\n    // 格式化预防信息\r\n    formatDiseasePrevent(results) {\r\n      if (!results || results.length === 0) return '未找到相关预防信息';\r\n      \r\n      const mainEntity = results[0].entity;\r\n      let answer = `<div class=\"entity-title\">【${mainEntity}】的预防措施</div>`;\r\n      \r\n      // 收集预防信息\r\n      const preventions = [];\r\n      \r\n      results.forEach(result => {\r\n        if (result.relations && result.relations.length > 0) {\r\n          result.relations.forEach(relation => {\r\n            if (relation.relation && relation.relation.includes('预防')) {\r\n              preventions.push(relation.target);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // 格式化预防列表\r\n      if (preventions.length > 0) {\r\n        answer += `<div class=\"prevention-section\">\r\n          <div class=\"prevention-list\">`;\r\n        \r\n        preventions.forEach((prevention, index) => {\r\n          answer += `<div class=\"prevention-item\">\r\n            <div class=\"prevention-number\">${index + 1}</div>\r\n            <div class=\"prevention-content\">${prevention}</div>\r\n          </div>`;\r\n        });\r\n        \r\n        answer += `</div></div>`;\r\n      } else {\r\n        answer += '<p>未找到相关预防信息</p>';\r\n      }\r\n      \r\n      return answer;\r\n    },\r\n    \r\n    // 格式化通用结果\r\n    formatGeneralResults(results) {\r\n      let formattedAnswer = '';\r\n\r\n      results.forEach((result, index) => {\r\n        if (index > 0) formattedAnswer += '\\n\\n';\r\n        \r\n        // 添加实体信息\r\n        if (result.entity) {\r\n          formattedAnswer += `<div class=\"entity-title\">【${result.entity}】</div>`;\r\n        }\r\n        \r\n        // 添加属性信息\r\n        if (result.properties && Object.keys(result.properties).length > 0) {\r\n          formattedAnswer += '<div class=\"properties-section\">';\r\n          formattedAnswer += '<div class=\"section-title\">属性信息：</div>';\r\n          \r\n          Object.entries(result.properties).forEach(([key, value]) => {\r\n            // 跳过空值或name属性(已经在实体标题中显示)\r\n            if (!value || key === 'name') return;\r\n            \r\n            // 对于较长的描述信息\r\n            if (key === 'desc' && typeof value === 'string' && value.length > 100) {\r\n              const paragraphs = value.replace(/\\\\xa0/g, ' ').split('\\n').filter(p => p.trim());\r\n              formattedAnswer += `<div class=\"property-item\"><span class=\"property-key\">${key}:</span>`;\r\n              paragraphs.forEach(para => {\r\n                formattedAnswer += `<p class=\"property-value-paragraph\">${para}</p>`;\r\n              });\r\n              formattedAnswer += '</div>';\r\n            } else {\r\n              formattedAnswer += `<div class=\"property-item\">\r\n                <span class=\"property-key\">${key}:</span>\r\n                <span class=\"property-value\">${value}</span>\r\n              </div>`;\r\n            }\r\n          });\r\n          \r\n          formattedAnswer += '</div>';\r\n        }\r\n        \r\n        // 添加关系信息\r\n        if (result.relations && result.relations.length > 0) {\r\n          formattedAnswer += '<div class=\"relations-section\">';\r\n          formattedAnswer += '<div class=\"section-title\">相关信息：</div>';\r\n          \r\n          const relationsByType = {};\r\n          \r\n          // 对关系进行分组\r\n          result.relations.forEach(relation => {\r\n            const type = relation.relation || '其他';\r\n            if (!relationsByType[type]) {\r\n              relationsByType[type] = [];\r\n            }\r\n            relationsByType[type].push(relation);\r\n          });\r\n          \r\n          // 按关系类型输出\r\n          Object.entries(relationsByType).forEach(([type, relations]) => {\r\n            formattedAnswer += `<div class=\"relation-group\">\r\n              <div class=\"relation-type\">${type}：</div>\r\n              <div class=\"relation-items\">`;\r\n              \r\n            relations.forEach(relation => {\r\n              formattedAnswer += `<div class=\"relation-item\">• ${relation.target || relation.source}</div>`;\r\n            });\r\n            \r\n            formattedAnswer += '</div></div>';\r\n          });\r\n          \r\n          formattedAnswer += '</div>';\r\n        }\r\n      });\r\n\r\n      return formattedAnswer || '很抱歉，暂时没有找到相关信息。请尝试换一种方式提问，或者咨询其他医疗问题。';\r\n    },\r\n\r\n    async sendMessage() {\r\n      if (!this.inputText) return;\r\n\r\n      try {\r\n        // 添加用户消息\r\n        this.messages.push({\r\n          id: this.messageId++,\r\n          text: this.inputText,\r\n          isUser: true,\r\n          timestamp: Date.now()\r\n        });\r\n\r\n        // 保存当前问题\r\n        const currentQuestion = this.inputText;\r\n        this.inputText = '';\r\n        \r\n        // 焦点回到输入框\r\n        this.$nextTick(() => {\r\n          this.$refs.inputField.focus();\r\n        });\r\n\r\n        this.isLoading = true;\r\n        \r\n        // 自动滚动到底部\r\n        this.scrollToBottom();\r\n        \r\n        const response = await axios.post('http://127.0.0.1:8000/api/qa/', { \r\n          question: currentQuestion \r\n        });\r\n\r\n        // 处理响应\r\n        const answer = response.data?.success\r\n          ? this.findAnswerInData(response.data)\r\n          : '抱歉，服务器处理您的请求时遇到了问题，请稍后再试。';\r\n\r\n        // 添加系统消息\r\n        this.messages.push({\r\n          id: this.messageId++,\r\n          text: answer,\r\n          isUser: false,\r\n          timestamp: Date.now()\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(`请求失败：${error.response?.data?.message || error.message}`);\r\n        // 添加错误消息\r\n        this.messages.push({\r\n          id: this.messageId++,\r\n          text: '抱歉，连接服务器时遇到了问题。请检查您的网络连接，或稍后再试。',\r\n          isUser: false,\r\n          timestamp: Date.now()\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n        // 自动滚动到底部\r\n        this.scrollToBottom();\r\n      }\r\n    },\r\n    \r\n    // 滚动到底部\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        const container = this.$refs.messageList;\r\n        container.scrollTop = container.scrollHeight;\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 基础变量 - 亮色模式 */\r\n:root {\r\n  --primary-color: #4D96FF;\r\n  --primary-dark: #3879D9;\r\n  --secondary-color: #6BCB77;\r\n  --accent-color: #FF6B6B;\r\n  --background-color: #F8FAFC;\r\n  --surface-color: #FFFFFF;\r\n  --text-primary: #334155;\r\n  --text-secondary: #64748B;\r\n  --border-color: #E2E8F0;\r\n  --highlight-bg: rgba(77, 150, 255, 0.1);\r\n  --highlight-text: #3879D9;\r\n  --success-color: #4CAF50;\r\n  --error-color: #F44336;\r\n  --info-color: #2196F3;\r\n}\r\n\r\n/* 主容器 */\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background: var(--background-color);\r\n  font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\r\n  color: var(--text-primary);\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\n/* 暗色模式 */\r\n.dark-mode {\r\n  --primary-color: #5D9DFF;\r\n  --primary-dark: #4187E7;\r\n  --secondary-color: #7BD986;\r\n  --accent-color: #FF7B7B;\r\n  --background-color: #121212;\r\n  --surface-color: #1E1E1E;\r\n  --text-primary: #E1E1E1;\r\n  --text-secondary: #AAAAAA;\r\n  --border-color: #333333;\r\n  --highlight-bg: rgba(93, 157, 255, 0.15);\r\n  --highlight-text: #5D9DFF;\r\n}\r\n\r\n/* 头部 */\r\n.chat-header {\r\n  background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);\r\n  color: white;\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 10;\r\n}\r\n\r\n.header-left, .header-right {\r\n  flex: 0 0 auto;\r\n  width: 40px;\r\n}\r\n\r\n.header-center {\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n}\r\n\r\n.chat-header h1 {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.header-subtitle {\r\n  font-size: 0.85rem;\r\n  opacity: 0.9;\r\n  margin-top: 3px;\r\n}\r\n\r\n.icon-button {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  opacity: 0.9;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  transition: background 0.2s, opacity 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.icon-button:hover {\r\n  opacity: 1;\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n/* 消息列表 */\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  background-color: var(--background-color);\r\n  position: relative;\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n/* 欢迎消息 */\r\n.welcome-message {\r\n  text-align: center;\r\n  margin: auto;\r\n  max-width: 600px;\r\n  padding: 30px;\r\n  background: var(--surface-color);\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.07);\r\n  animation: fadeIn 0.6s ease;\r\n}\r\n\r\n.welcome-icon {\r\n  color: var(--primary-color);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.welcome-message h2 {\r\n  margin: 10px 0;\r\n  color: var(--text-primary);\r\n}\r\n\r\n.welcome-message p {\r\n  color: var(--text-secondary);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.suggestion-chips {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 10px;\r\n}\r\n\r\n.chip {\r\n  background: var(--highlight-bg);\r\n  color: var(--primary-color);\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.chip:hover {\r\n  background: var(--highlight-bg);\r\n  border-color: var(--primary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 消息气泡 */\r\n.message-bubble {\r\n  display: flex;\r\n  max-width: 90%;\r\n  border-radius: 0 15px 15px 15px;\r\n  line-height: 1.6;\r\n  position: relative;\r\n}\r\n\r\n.message-avatar {\r\n  flex-shrink: 0;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.avatar-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.user .avatar-icon {\r\n  background: var(--accent-color);\r\n}\r\n\r\n.system .avatar-icon {\r\n  background: var(--primary-color);\r\n}\r\n\r\n.message-wrapper {\r\n  background: var(--surface-color);\r\n  padding: 15px;\r\n  border-radius: 0 15px 15px 15px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);\r\n  position: relative;\r\n  min-width: 200px;\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.85rem;\r\n  color: var(--text-secondary);\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n.message-time {\r\n  font-size: 0.75rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.message-content {\r\n  white-space: pre-line;\r\n  font-size: 15px;\r\n}\r\n\r\n.message-content .highlight {\r\n  color: var(--highlight-text);\r\n  font-weight: 600;\r\n  padding: 0 2px;\r\n}\r\n\r\n.message-content .info-title {\r\n  display: block;\r\n  margin-top: 12px;\r\n  margin-bottom: 6px;\r\n  color: var(--text-primary);\r\n  font-weight: 600;\r\n}\r\n\r\n.message-content .list-item {\r\n  margin-left: 8px;\r\n  margin-bottom: 4px;\r\n  display: flex;\r\n}\r\n\r\n.message-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.message-wrapper:hover .message-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.action-btn {\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-secondary);\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.action-btn:hover {\r\n  background: var(--highlight-bg);\r\n  color: var(--primary-color);\r\n}\r\n\r\n.user {\r\n  align-self: flex-end;\r\n  flex-direction: row-reverse;\r\n}\r\n\r\n.user .message-avatar {\r\n  margin-right: 0;\r\n  margin-left: 12px;\r\n}\r\n\r\n.user .message-wrapper {\r\n  background: var(--highlight-bg);\r\n  border-radius: 15px 0 15px 15px;\r\n}\r\n\r\n.system {\r\n  align-self: flex-start;\r\n}\r\n\r\n/* 输入区域 */\r\n.input-area {\r\n  padding: 15px 20px;\r\n  background: var(--surface-color);\r\n  border-top: 1px solid var(--border-color);\r\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.input-wrapper {\r\n  display: flex;\r\n  background: var(--background-color);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 30px;\r\n  overflow: hidden;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.input-wrapper:focus-within {\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 3px rgba(77, 150, 255, 0.2);\r\n}\r\n\r\ninput {\r\n  flex: 1;\r\n  padding: 15px 20px;\r\n  border: none;\r\n  font-size: 16px;\r\n  background: transparent;\r\n  color: var(--text-primary);\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.input-footer {\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n  color: var(--text-secondary);\r\n}\r\n\r\nkbd {\r\n  background-color: var(--background-color);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 3px;\r\n  padding: 2px 5px;\r\n  font-size: 11px;\r\n}\r\n\r\n.send-button {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: none;\r\n  background: var(--primary-color);\r\n  color: white;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n  margin: 2px;\r\n}\r\n\r\n.send-button:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.send-button:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 加载动画 */\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n/* 输入中动画 */\r\n.typing-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  background: var(--surface-color);\r\n  padding: 12px 20px;\r\n  border-radius: 18px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.typing-indicator .dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  margin: 0 4px;\r\n  background: var(--primary-color);\r\n  border-radius: 50%;\r\n  opacity: 0.6;\r\n  animation: dotPulse 1.5s infinite;\r\n}\r\n\r\n.typing-indicator .dot:nth-child(2) {\r\n  animation-delay: 0.2s;\r\n}\r\n\r\n.typing-indicator .dot:nth-child(3) {\r\n  animation-delay: 0.4s;\r\n}\r\n\r\n/* 消息通知 */\r\n.toast {\r\n  position: fixed;\r\n  bottom: 80px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  color: white;\r\n  font-size: 14px;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  animation: toastIn 0.3s ease;\r\n}\r\n\r\n.toast.success {\r\n  background-color: var(--success-color);\r\n}\r\n\r\n.toast.error {\r\n  background-color: var(--error-color);\r\n}\r\n\r\n.toast.info {\r\n  background-color: var(--info-color);\r\n}\r\n\r\n/* 动画 */\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n@keyframes dotPulse {\r\n  0%, 100% { opacity: 0.3; transform: scale(0.8); }\r\n  50% { opacity: 1; transform: scale(1.2); }\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n@keyframes toastIn {\r\n  from { opacity: 0; transform: translate(-50%, 20px); }\r\n  to { opacity: 1; transform: translate(-50%, 0); }\r\n}\r\n\r\n/* 消息淡入动画 */\r\n.message-fade-enter-active, .message-fade-leave-active {\r\n  transition: all 0.3s;\r\n}\r\n.message-fade-enter, .message-fade-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(20px);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .message-bubble {\r\n    max-width: 95%;\r\n  }\r\n  \r\n  .chat-header h1 {\r\n    font-size: 1.2rem;\r\n  }\r\n  \r\n  .header-subtitle {\r\n    font-size: 0.8rem;\r\n  }\r\n  \r\n  .input-area {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .suggestion-chips {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .chip {\r\n    width: 100%;\r\n    max-width: 300px;\r\n  }\r\n  \r\n  .welcome-message {\r\n    padding: 20px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .message-avatar {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  .user .message-avatar {\r\n    margin-left: 8px;\r\n  }\r\n  \r\n  .avatar-icon {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n  \r\n  .input {\r\n    padding: 12px 15px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .send-button {\r\n    width: 45px;\r\n    height: 45px;\r\n  }\r\n  \r\n  .input-footer {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* 新增回答格式化样式 */\r\n.entity-title {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: var(--primary-color);\r\n  margin-bottom: 12px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.desc-paragraph {\r\n  margin-bottom: 10px;\r\n  line-height: 1.6;\r\n  text-align: justify;\r\n}\r\n\r\n.section-title {\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin: 15px 0 8px;\r\n}\r\n\r\n/* 属性样式 */\r\n.properties-section {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.property-item {\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.property-key {\r\n  font-weight: 500;\r\n  color: var(--primary-dark);\r\n  margin-right: 5px;\r\n}\r\n\r\n.property-value {\r\n  color: var(--text-primary);\r\n}\r\n\r\n.property-value-paragraph {\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  text-align: justify;\r\n  line-height: 1.6;\r\n}\r\n\r\n/* 关系样式 */\r\n.relations-section {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.relation-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.relation-type {\r\n  font-weight: 500;\r\n  color: var(--primary-dark);\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.relation-items {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.relation-item {\r\n  background-color: var(--highlight-bg);\r\n  border-radius: 8px;\r\n  padding: 4px 12px;\r\n  margin-bottom: 5px;\r\n  color: var(--highlight-text);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* 并发症样式 */\r\n.complication-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.complication-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.complication-item {\r\n  background-color: var(--highlight-bg);\r\n  color: var(--highlight-text);\r\n  padding: 4px 12px;\r\n  border-radius: 8px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.complication-more {\r\n  font-size: 0.85rem;\r\n  color: var(--text-secondary);\r\n  margin-top: 5px;\r\n}\r\n\r\n/* 食物样式 */\r\n.food-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.food-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.food-item, .recipe-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  background-color: var(--highlight-bg);\r\n  padding: 8px 12px;\r\n  border-radius: 8px;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.food-item:hover, .recipe-item:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.food-icon, .recipe-icon {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.recipe-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 症状样式 */\r\n.symptom-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.symptom-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n}\r\n\r\n.symptom-item {\r\n  background-color: var(--highlight-bg);\r\n  color: var(--highlight-text);\r\n  padding: 4px 12px;\r\n  border-radius: 8px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* 预防样式 */\r\n.prevention-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.prevention-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.prevention-item {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  background-color: var(--highlight-bg);\r\n  border-radius: 10px;\r\n}\r\n\r\n.prevention-number {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 0.85rem;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.prevention-content {\r\n  flex: 1;\r\n}\r\n\r\n/* 温馨提示样式 */\r\n.notice-section {\r\n  margin-top: 20px;\r\n  padding: 12px 15px;\r\n  background-color: rgba(255, 107, 107, 0.1);\r\n  border-left: 3px solid var(--accent-color);\r\n  border-radius: 6px;\r\n}\r\n\r\n.notice-title {\r\n  font-weight: 600;\r\n  color: var(--accent-color);\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.notice-content {\r\n  font-size: 0.9rem;\r\n  color: var(--text-primary);\r\n  line-height: 1.5;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media (max-width: 768px) {\r\n  .food-grid {\r\n    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  }\r\n  \r\n  .relation-items, .complication-list {\r\n    flex-direction: column;\r\n    gap: 5px;\r\n  }\r\n  \r\n  .relation-item, .complication-item, .symptom-item {\r\n    width: fit-content;\r\n  }\r\n}\r\n</style>","import { render } from \"./chat.vue?vue&type=template&id=aadde2e6&scoped=true\"\nimport script from \"./chat.vue?vue&type=script&lang=js\"\nexport * from \"./chat.vue?vue&type=script&lang=js\"\n\nimport \"./chat.vue?vue&type=style&index=0&id=aadde2e6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-aadde2e6\"]])\n\nexport default __exports__"],"names":["class","key","xmlns","width","height","viewBox","fill","stroke","ref","_createElementBlock","_normalizeClass","$data","darkMode","_createElementVNode","_hoisted_1","_createStaticVNode","_hoisted_2","onClick","_cache","args","$options","toggleDarkMode","title","_hoisted_4","_hoisted_5","d","_hoisted_3","_hoisted_6","messages","length","_hoisted_7","points","_hoisted_8","_Fragment","_renderList","suggestions","suggestion","index","$event","useExample","_hoisted_9","_createCommentVNode","_createVNode","_TransitionGroup","name","default","_withCtx","message","id","isUser","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","cx","cy","r","_hoisted_14","_hoisted_15","_toDisplayString","_hoisted_16","formatTime","timestamp","innerHTML","formatMessage","text","_hoisted_17","_hoisted_18","copyToClipboard","x","y","rx","ry","_hoisted_19","_","isLoading","_hoisted_20","_hoisted_21","_hoisted_22","inputText","placeholder","onKeyup","_withKeys","sendMessage","disabled","_hoisted_23","trim","_hoisted_25","_hoisted_26","x1","y1","x2","y2","_hoisted_24","_createTextVNode","toast","show","type","data","messageId","timeout","mounted","savedDarkMode","localStorage","getItem","this","document","addEventListener","handleKeyDown","$nextTick","$refs","inputField","focus","beforeDestroy","removeEventListener","methods","e","preventDefault","showToast","clearTimeout","setTimeout","navigator","clipboard","writeText","then","catch","err","console","error","setItem","formatted","replace","date","Date","getHours","toString","padStart","getMinutes","findAnswerInData","results","questionType","detectQuestionType","formatDiseaseDescription","formatDiseaseComplication","formatDiseaseFood","formatDiseaseSymptom","formatDiseasePrevent","formatGeneralResults","firstResult","properties","desc","every","relations","some","rel","relation","includes","answer","result","entity","paragraphs","split","filter","p","forEach","para","mainEntity","complications","from","to","source","push","target","slice","comp","foods","recommended","recipes","food","recipe","symptoms","symptom","preventions","prevention","formattedAnswer","Object","keys","entries","value","relationsByType","now","currentQuestion","scrollToBottom","response","axios","post","question","success","container","messageList","scrollTop","scrollHeight","__exports__","render"],"sourceRoot":""}